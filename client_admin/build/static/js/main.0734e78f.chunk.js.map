{"version":3,"sources":["actions/constants.js","reducers/auth.reducer.js","reducers/user.reducer.js","reducers/category.reducer.js","reducers/product.reducer.js","reducers/order.reducer.js","reducers/page.reducer.js","reducers/index.js","store/index.js","helpers/axios.js","urlConfig.js","actions/auth.actions.js","actions/category.action.js","actions/product.action.js","components/Header/index.js","components/Layout/index.js","containers/Home/index.js","components/UI/Input/index.js","containers/Signin/index.js","containers/Signup/index.js","actions/user.actions.js","components/HOC/PrivateRoute.js","components/UI/Card/index.js","containers/Orders/index.js","actions/order.action.js","components/UI/Modal/index.js","containers/Products/index.js","containers/Category/components/UpdateCategoriesModal.js","containers/Category/components/AddCategoryModal.js","containers/Category/index.js","helpers/linearCategories.js","containers/NewPage/index.js","actions/page.actions.js","App.js","actions/initialdata.actions.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["authConstants","userConstants","categoryConstants","productConstants","GET_ALL_PRODUCT_REQUEST","GET_ALL_PRODUCT_FAILURE","GET_ALL_PRODUCT_SUCCESS","DELETE_PRODUCT_BY_ID_REQUEST","DELETE_PRODUCT_BY_ID_SUCCESS","DELETE_PRODUCT_BY_ID_FAILURE","ADD_PRODUCT_REQUEST","ADD_PRODUCT_SUCCESS","ADD_PRODUCT_FAILURE","pageConstants","orderConstants","initState","token","user","firstName","lastName","email","picture","authenticate","authenticating","loading","error","message","categories","buildNewCategories","parentId","category","myCategories","undefined","_id","name","slug","type","children","cat","push","products","orders","page","rootReducer","combineReducers","auth","state","action","console","log","payload","updateCategories","product","order","store","createStore","composeWithDevTools","applyMiddleware","thunk","window","localStorage","getItem","axiosInstance","axios","create","baseURL","headers","interceptors","request","use","req","getState","Authorization","response","res","status","clear","dispatch","Promise","reject","isUserLoggedIn","a","JSON","parse","getAllCategory","get","categoryList","data","getProducts","GET_ALL_PRODUCTS_REQUEST","post","GET_ALL_PRODUCTS_SUCCESS","GET_ALL_PRODUCTS_FAILURE","Header","useSelector","useDispatch","logout","Navbar","collapseOnSelect","fixed","expand","variant","style","zIndex","background","boxShadow","Container","fluid","to","className","Toggle","aria-controls","Collapse","id","Nav","cursor","onClick","Layout","props","sidebar","Row","Col","md","exact","marginLeft","paddingTop","Home","Jumbotron","margin","Input","input","Form","Group","label","Label","value","onChange","placeholder","options","length","map","option","index","Control","Text","errorMessage","Signin","useState","setEmail","password","setPassword","useEffect","marginTop","span","offset","onSubmit","e","preventDefault","setItem","stringify","login","target","Button","Signup","setFirstName","setLastName","signup","PrivateRoute","Component","component","rest","Card","headerLeft","headerRight","Orders","setType","onOrderUpdate","orderId","updateOrder","formatDate","date","d","Date","getFullYear","getMonth","getDate","orderItem","display","justifyContent","padding","alignItems","items","item","productId","totalAmount","paymentType","paymentStatus","boxSizing","orderStatus","isCompleted","NewModal","Modal","size","show","onHide","handleClose","animation","closeButton","Title","modalTitle","Body","Footer","buttons","btn","color","Products","setName","quantity","setQuantity","price","setPrice","description","setDescription","categoryId","setCategoryId","productPictures","setProductPictures","setShow","productDetailModal","setProductDetailModal","productDetails","setProductDetails","submitProductForm","form","FormData","append","pic","addProduct","then","createCategoryList","handleProductPictures","files","handleCloseProductDetailModal","showProductDetailModal","Table","fonstSize","responsive","i","src","fileName","img","UpdateCategoriesModal","expandedArray","checkedArray","handleCategoryInput","AddCategoModal","categoryName","setCategoryName","parentCategoryId","setParentCategoryId","handleCategoryImage","Category","categoryImage","setCategoryImage","checked","setChecked","expanded","setExpanded","setCheckedArray","setExpandedArray","updateCategoryModal","setUpdateCategoryModal","deleteCategoryModal","setDeleteCategoryModal","updateCheckedAndExpandedCategories","forEach","find","_index","deleteCategories","ids","checkedIdArray","concat","result","nodes","renderCategories","onCheck","onExpand","icons","check","uncheck","halfCheck","expandClose","expandOpen","alert","addCategory","key","updatedCheckedArray","updatedExpandedArray","linearCategories","NewPage","createModal","setCreateModal","title","setTitle","desc","setDesc","banners","setBanners","setProducts","setCategories","onCategoryChange","handleBannerImages","handleProductImages","sumbitPageForm","banner","createPage","App","path","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.0734e78f.chunk.js","sourcesContent":["export const authConstants = {\r\n    LOGIN_REQUEST: 'LOGIN_REQUEST',\r\n    LOGIN_SUCCESS: 'LOGIN_SUCCESS',\r\n    LOGIN_FAILURE: 'LOGIN_FAILURE',\r\n    LOGOUT_REQUEST: 'LOGOUT_REQUEST',\r\n    LOGOUT_SUCCESS: 'LOGOUT_SUCCESS',\r\n    LOGOUT_FAILURE: 'LOGOUT_FAILURE',\r\n}\r\n\r\n\r\nexport const userConstants = {\r\n    USER_REGISTER_REQUEST: 'USER_REGISTER_REQUEST',\r\n    USER_REGISTER_SUCCESS: 'USER_REGISTER_SUCCESS',\r\n    USER_REGISTER_FAILURE: 'USER_REGISTER_FAILURE',\r\n}\r\n\r\nexport const categoryConstants = {\r\n    GET_ALL_CATEGORIES_REQUEST: 'GET_ALL_CATEGORIES_REQUEST',\r\n    GET_ALL_CATEGORIES_SUCCESS: 'GET_ALL_CATEGORIES_SUCCESS',\r\n    GET_ALL_CATEGORIES_FAILURE: 'GET_ALL_CATEGORIES_FAILURE',\r\n    ADD_NEW_CATEGORY_REQUEST: 'ADD_NEW_CATEGORY_REQUEST',\r\n    ADD_NEW_CATEGORY_SUCCESS: 'ADD_NEW_CATEGORY_SUCCESS',\r\n    ADD_NEW_CATEGORY_FAILURE: 'ADD_NEW_CATEGORY_FAILURE',\r\n    UPDATE_CATEGORRIES_REQUEST: 'UPDATE_CATEGORRIES_REQUEST',\r\n    UPDATE_CATEGORRIES_FAILURE: 'UPDATE_CATEGORRIES_FAILURE',\r\n    UPDATE_CATEGORRIES_SUCCESS: 'UPDATE_CATEGORRIES_SUCCESS',\r\n    DELETE_CATEGORRIES_REQUEST: 'DELETE_CATEGORRIES_REQUEST',\r\n    DELETE_CATEGORRIES_FAILURE: 'DELETE_CATEGORRIES_FAILURE',\r\n    DELETE_CATEGORRIES_SUCCESS: 'DELETE_CATEGORRIES_SUCCESS',\r\n}\r\n\r\n\r\nexport const productConstants = {\r\n    GET_ALL_PRODUCT_REQUEST: 'GET_ALL_PRODUCT_REQUEST',\r\n    GET_ALL_PRODUCT_FAILURE: 'GET_ALL_PRODUCT_FAILURE',\r\n    GET_ALL_PRODUCT_SUCCESS: 'GET_ALL_PRODUCT_SUCCESS',\r\n\r\n\r\n    DELETE_PRODUCT_BY_ID_REQUEST: \"DELETE_PRODUCT_BY_ID_REQUEST\",\r\n    DELETE_PRODUCT_BY_ID_SUCCESS: \"DELETE_PRODUCT_BY_ID_SUCCESS\",\r\n    DELETE_PRODUCT_BY_ID_FAILURE: \"DELETE_PRODUCT_BY_ID_FAILURE\",\r\n\r\n    ADD_PRODUCT_REQUEST: \"ADD_PRODUCT_REQUEST\",\r\n    ADD_PRODUCT_SUCCESS: \"ADD_PRODUCT_REQUEST\",\r\n    ADD_PRODUCT_FAILURE: \"ADD_PRODUCT_FAILURE\",\r\n\r\n}\r\n\r\n\r\nexport const initialDataConstants = {\r\n    GET_ALL_INITIAL_DATA_REQUEST: 'GET_ALL_INITIAL_DATA_REQUEST',\r\n    GET_ALL_INITIAL_DATA_FAILURE: 'GET_ALL_INITIAL_DATA_FAILURE',\r\n    GET_ALL_INITIAL_DATA_SUCCESS: 'GET_ALL_INITIAL_DATA_SUCCESS',\r\n}\r\n\r\n\r\nexport const pageConstants = {\r\n    CREATE_PAGE_REQUEST: 'CREATE_PAGE_REQUEST',\r\n    CREATE_PAGE_FAILURE: 'CREATE_PAGE_FAILURE',\r\n    CREATE_PAGE_SUCCESS: 'CREATE_PAGE_SUCCESS',\r\n}\r\n\r\n\r\n\r\nexport const orderConstants = {\r\n    GET_CUSTOMER_ORDER_REQUEST: \"GET_CUSTOMER_ORDER_REQUEST\",\r\n    GET_CUSTOMER_ORDER_SUCCESS: \"GET_CUSTOMER_ORDER_SUCCESS\",\r\n    GET_CUSTOMER_ORDER_FAILURE: \"GET_CUSTOMER_ORDER_FAILURE\",\r\n\r\n    UPDATE_CUSTOMER_ORDER_REQUEST: \"UPDATE_CUSTOMER_ORDER_REQUEST\",\r\n    UPDATE_CUSTOMER_ORDER_SUCCESS: \"UPDATE_CUSTOMER_ORDER_SUCCESS\",\r\n    UPDATE_CUSTOMER_ORDER_FAILURE: \"UPDATE_CUSTOMER_ORDER_FAILURE\",\r\n};\r\n","import { authConstants } from \"../actions/constants\";\r\n\r\nconst initState = {\r\n    token: null,\r\n    user: {\r\n        firstName: '',\r\n        lastName: '',\r\n        email: '',\r\n        picture: '',\r\n    },\r\n    authenticate: false,\r\n    authenticating: false,\r\n    loading: false,\r\n    error: null,\r\n    message: ''\r\n}\r\n\r\nexport default (state = initState, action) => {\r\n    console.log(action);\r\n    switch (action.type) {\r\n        case authConstants.LOGIN_REQUEST:\r\n            state = {\r\n                ...state,\r\n                authenticating: true\r\n            }\r\n            break;\r\n        case authConstants.LOGIN_SUCCESS:\r\n            state = {\r\n                ...state,\r\n                user: action.payload.user,\r\n                token: action.payload.token,\r\n                authenticate: true,\r\n                authenticating: false\r\n            }\r\n            break;\r\n\r\n        case authConstants.LOGOUT_REQUEST:\r\n            state = {\r\n                ...initState,\r\n                loading: true\r\n            }\r\n            break;\r\n        case authConstants.LOGOUT_SUCCESS:\r\n            state = {\r\n                ...initState,\r\n            }\r\n            break;\r\n        case authConstants.LOGOUT_FAILURE:\r\n            state = {\r\n                ...initState,\r\n                error: action.payload.error,\r\n                loading: false\r\n            }\r\n            break;\r\n    }\r\n    return state;\r\n}","import { userConstants } from \"../actions/constants\";\r\n\r\nconst initState = {\r\n    error: null,\r\n    message: '',\r\n    loading: false\r\n}\r\n\r\nexport default (state = initState, action) => {\r\n    // console.log(action);\r\n    switch (action.type) {\r\n        case userConstants.USER_REGISTER_REQUEST:\r\n            state = {\r\n                ...state,\r\n                loading: true\r\n            }\r\n            break;\r\n        case userConstants.USER_REGISTER_SUCCESS:\r\n            state = {\r\n                ...state,\r\n                loading: false,\r\n                message: action.payload.message\r\n            }\r\n            break;\r\n        case userConstants.USER_REGISTER_FAILURE:\r\n            state = {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload.error\r\n            }\r\n            break;\r\n\r\n    }\r\n    return state;\r\n}","import { categoryConstants } from \"../actions/constants\";\r\n\r\nconst initState = {\r\n    categories: [],\r\n    loading: false,\r\n    error: null,\r\n}\r\n\r\nconst buildNewCategories = (parentId, categories, category) => {\r\n    let myCategories = [];\r\n\r\n    if (parentId == undefined) {\r\n        return [\r\n            ...categories,\r\n            {\r\n                _id: category._id,\r\n                name: category.name,\r\n                slug: category.slug,\r\n                type: category.type,\r\n                children: []\r\n            }\r\n        ];\r\n    }\r\n\r\n    for (let cat of categories) {\r\n\r\n        if (cat._id == parentId) {\r\n            myCategories.push({\r\n                ...cat,\r\n                children: cat.children ? buildNewCategories(parentId, [...cat.children, {\r\n                    _id: category._id,\r\n                    name: category.name,\r\n                    slug: category.slug,\r\n                    parentId: category.parentId,\r\n                    children: category.children\r\n                }], category) : []\r\n            })\r\n        } else {\r\n            myCategories.push({\r\n                ...cat,\r\n                children: cat.children ? buildNewCategories(parentId, cat.children, category) : []\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    return myCategories;\r\n}\r\n\r\n\r\nexport default (state = initState, action) => {\r\n    switch (action.type) {\r\n        case categoryConstants.GET_ALL_CATEGORIES_SUCCESS:\r\n            state = {\r\n                ...state,\r\n                categories: action.payload.categories\r\n            }\r\n            break;\r\n\r\n        case categoryConstants.ADD_NEW_CATEGORY_REQUEST:\r\n            state = {\r\n                ...state,\r\n                loading: true\r\n            }\r\n            break;\r\n\r\n        case categoryConstants.ADD_NEW_CATEGORY_SUCCESS:\r\n            const category = action.payload.category\r\n            const updateCategories = buildNewCategories(category.parentId, state.categories, category)\r\n            console.log(updateCategories)\r\n\r\n            state = {\r\n                ...state,\r\n                categories: updateCategories,\r\n                loading: false,\r\n            }\r\n            break;\r\n\r\n        case categoryConstants.ADD_NEW_CATEGORY_FAILURE:\r\n            state = {\r\n                ...initState,\r\n                loading: false,\r\n                error: action.payload.error\r\n            }\r\n            break;\r\n\r\n\r\n        case categoryConstants.UPDATE_CATEGORRIES_REQUEST:\r\n            state = {\r\n                ...state,\r\n                loading: true\r\n            }\r\n            break;\r\n        case categoryConstants.UPDATE_CATEGORRIES_SUCCESS:\r\n            state = {\r\n                ...state,\r\n                loading: false\r\n            }\r\n            break;\r\n        case categoryConstants.UPDATE_CATEGORRIES_FAILURE:\r\n            state = {\r\n                ...state,\r\n                error: action.payload.error,\r\n                loading: false\r\n            }\r\n            break;\r\n        case categoryConstants.DELETE_CATEGORRIES_REQUEST:\r\n            state = {\r\n                ...state,\r\n                loading: true\r\n            }\r\n            break;\r\n        case categoryConstants.DELETE_CATEGORRIES_SUCCESS:\r\n            state = {\r\n                ...state,\r\n                loading: false\r\n            }\r\n            break;\r\n        case categoryConstants.DELETE_CATEGORRIES_FAILURE:\r\n            state = {\r\n                ...state,\r\n                error: action.payload.error,\r\n                loading: false\r\n            }\r\n            break;\r\n\r\n\r\n    }\r\n    return state;\r\n}","import { productConstants } from \"../actions/constants\";\r\n\r\nconst initState = {\r\n    products: []\r\n}\r\n\r\nexport default (state = initState, action) => {\r\n    console.log(action);\r\n    switch (action.type) {\r\n        case productConstants.GET_ALL_PRODUCT_SUCCESS:\r\n            state = {\r\n                ...state,\r\n                products: action.payload.products,\r\n            }\r\n            break;\r\n    }\r\n    return state;\r\n}","import { orderConstants } from \"../actions/constants\";\r\n\r\nconst initState = {\r\n  orders: [],\r\n};\r\n\r\nexport default (state = initState, action) => {\r\n  switch (action.type) {\r\n    case orderConstants.GET_CUSTOMER_ORDER_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        orders: action.payload.orders,\r\n      };\r\n      break;\r\n  }\r\n\r\n  return state;\r\n};\r\n","import { pageConstants } from \"../actions/constants\"\n\nconst initState = {\n    error: null,\n    loading: false,\n    page: {}\n}\n\nexport default (state = initState, action) => {\n    switch (action.type) {\n        case pageConstants.CREATE_PAGE_REQUEST:\n            state = {\n                ...state,\n                loading: true\n            }\n            break;\n        case pageConstants.CREATE_PAGE_SUCCESS:\n            state = {\n                ...state,\n                loading: false\n            }\n            break;\n        case pageConstants.CREATE_PAGE_FAILURE:\n            state = {\n                ...state,\n                loading: false,\n                error: action.payload.error\n            }\n            break;\n    }\n\n    return state;\n}","import authReducer from \"./auth.reducer\";\r\nimport userReducer from \"./user.reducer\";\r\nimport categoryReducer from \"./category.reducer\";\r\nimport productReducer from \"./product.reducer\";\r\nimport orderReducer from \"./order.reducer\";\r\nimport pageReducer from \"./page.reducer\";\r\nimport { combineReducers } from \"redux\";\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    user: userReducer,\r\n    category: categoryReducer,\r\n    product: productReducer,\r\n    order: orderReducer,\r\n    page: pageReducer,\r\n});\r\n\r\nexport default rootReducer;","import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport rootReducer from \"../reducers\";\r\nimport thunk from \"redux-thunk\";\r\n\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools(\r\n    applyMiddleware(thunk)\r\n));\r\n\r\nexport default store;","import axios from 'axios';\r\nimport { api } from '../urlConfig';\r\nimport { authConstants } from '../actions/constants';\r\nimport store from \"../store\";\r\n\r\nconst token = window.localStorage.getItem('token');\r\n\r\nconst axiosInstance = axios.create({\r\n    baseURL: api,\r\n    headers: {\r\n        'Authorization': token ? `Bearer ${token}` : ''\r\n    }\r\n});\r\n\r\naxiosInstance.interceptors.request.use((req) => {\r\n    const { auth } = store.getState();\r\n    if(auth.token){\r\n        req.headers.Authorization = `Bearer ${auth.token}`;\r\n    }\r\n    return req;\r\n});\r\n\r\naxiosInstance.interceptors.response.use((res) => {\r\n    return res;\r\n}, (error) => {\r\n    console.log(error.response)\r\n    const status = error.response ? error.response.status : 500\r\n    if (status === 500) {\r\n        localStorage.clear();\r\n        store.dispatch({ type: authConstants.LOGOUT_SUCCESS });\r\n    }\r\n    return Promise.reject(error);\r\n});\r\n\r\nexport default axiosInstance;","export const api = 'http://localhost:4000/api'\r\nexport const generatePublicUrl = (fileName) => {\r\n    return `http://localhost:4000/public/${fileName}`\r\n}","import { authConstants } from \"./constants\";\r\nimport axios from \"../helpers/axios\";\r\n\r\nexport const login = (user) => {\r\n    // console.log(user)\r\n    return async (dispatch) => {\r\n\r\n        dispatch({ type: authConstants.LOGIN_REQUEST })\r\n        const res = await axios.post(`/admin/signin`, {\r\n            ...user\r\n        })\r\n\r\n        if(res.status === 200){\r\n            const { token, user } = res.data;\r\n            localStorage.setItem('token', token)\r\n            localStorage.setItem('user', JSON.stringify(user));\r\n            dispatch({\r\n                type: authConstants.LOGIN_SUCCESS,\r\n                payload: { token, user }\r\n            })\r\n        }else{\r\n            if(res.status === 400){\r\n                dispatch({\r\n                    type: authConstants.LOGIN_FAILURE,\r\n                    payload: { error: res.data.error }\r\n                })\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const isUserLoggedIn = () => {\r\n    return async dispatch => {\r\n        const token = localStorage.getItem('token');\r\n        if(token){\r\n            const user = JSON.parse(localStorage.getItem('user'));\r\n            dispatch({\r\n                type: authConstants.LOGIN_SUCCESS,\r\n                payload: { token, user }\r\n            })\r\n        }else{\r\n            dispatch({\r\n                type: authConstants.LOGIN_FAILURE,\r\n                payload: { error: 'Failed to login' }\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const signout = () => {\r\n    return async dispatch => {\r\n        \r\n        dispatch({ type: authConstants.LOGOUT_REQUEST })\r\n        const res = await axios.post(`/admin/signout`)\r\n\r\n        if (res.status === 200) {\r\n            localStorage.clear();\r\n        dispatch({ type: authConstants.LOGOUT_SUCCESS })\r\n        } else {\r\n            dispatch({ \r\n                type: authConstants.LOGOUT_SUCCESS, \r\n                payload: { error: res.data.error }\r\n            })\r\n        }\r\n    }\r\n}","import axios from \"../helpers/axios\";\r\nimport { categoryConstants } from \"./constants\";\r\n\r\nconst getAllCategory = () => {\r\n    return async dispatch => {\r\n        dispatch({ type: categoryConstants.GET_ALL_CATEGORIES_REQUEST });\r\n        const res = await axios.get(`/category/getcategories`);\r\n        // console.log(res);\r\n        if (res.status === 200) {\r\n            const { categoryList } = res.data;\r\n            dispatch({\r\n                type: categoryConstants.GET_ALL_CATEGORIES_SUCCESS,\r\n                payload: { categories: categoryList }\r\n            });\r\n        } else {\r\n            dispatch({\r\n                type: categoryConstants.GET_ALL_CATEGORIES_FAILURE,\r\n                payload: { error: res.data.error }\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport const addCategory = (form) => {\r\n    return async dispatch => {\r\n        dispatch({ type: categoryConstants.ADD_NEW_CATEGORY_REQUEST });\r\n        try {\r\n            const res = await axios.post(`/category/create`, form);\r\n            if (res.status === 201) {\r\n                dispatch({\r\n                    type: categoryConstants.ADD_NEW_CATEGORY_SUCCESS,\r\n                    payload: {\r\n                        category: res.data.category\r\n                    }\r\n                });\r\n            } else {\r\n                dispatch({\r\n                    type: categoryConstants.ADD_NEW_CATEGORY_FAILURE,\r\n                    payload: res.data.error\r\n                });\r\n            }\r\n        } catch (error) {\r\n            console.log(error.response);\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport const updateCategories = (form) => {\r\n    return async dispatch => {\r\n        dispatch({ type: categoryConstants.UPDATE_CATEGORRIES_REQUEST });\r\n        const res = await axios.post(`/category/update`, form);\r\n        if (res.status === 201) {\r\n            dispatch(getAllCategory())\r\n            dispatch({ type: categoryConstants.UPDATE_CATEGORRIES_SUCCESS });\r\n        } else {\r\n            const { error } = res.data;\r\n            dispatch({\r\n                type: categoryConstants.UPDATE_CATEGORRIES_FAILURE,\r\n                payload: { error }\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport const deleteCategories = (ids) => {\r\n    return async dispatch => {\r\n        dispatch({ type: categoryConstants.DELETE_CATEGORRIES_REQUEST });\r\n        const res = await axios.post(`/category/delete`, {\r\n            payload: {\r\n                ids\r\n            }\r\n        });\r\n        if (res.status === 201) {\r\n            dispatch(getAllCategory())\r\n            dispatch({ type: categoryConstants.DELETE_CATEGORRIES_SUCCESS });\r\n        } else {\r\n            const { error } = res.data;\r\n            dispatch({\r\n                type: categoryConstants.DELETE_CATEGORRIES_FAILURE,\r\n                payload: { error }\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport {\r\n    getAllCategory\r\n}","import axios from \"../helpers/axios\";\r\nimport { productConstants } from \"./constants\";\r\n\r\n// new action\r\nconst getProducts = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch({ type: productConstants.GET_ALL_PRODUCTS_REQUEST });\r\n      const res = await axios.post(`product/getProducts`);\r\n      if (res.status === 200) {\r\n        const { products } = res.data;\r\n        dispatch({\r\n          type: productConstants.GET_ALL_PRODUCTS_SUCCESS,\r\n          payload: { products },\r\n        });\r\n      } else {\r\n        dispatch({ type: productConstants.GET_ALL_PRODUCTS_FAILURE });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\n\r\n// modified actrion\r\nexport const addProduct = (form) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch({ type: productConstants.ADD_PRODUCT_REQUEST });\r\n      const res = await axios.post(`product/create`, form);\r\n      if (res.status === 201) {\r\n        dispatch({ type: productConstants.ADD_PRODUCT_SUCCESS });\r\n        dispatch(getProducts());\r\n      } else {\r\n        dispatch({ type: productConstants.ADD_PRODUCT_FAILURE });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\n\r\n// new action\r\nexport const deleteProductById = (payload) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const res = await axios.delete(`product/deleteProductById`, {\r\n        data: { payload },\r\n      });\r\n      dispatch({ type: productConstants.DELETE_PRODUCT_BY_ID_REQUEST });\r\n      if (res.status === 202) {\r\n        dispatch({ type: productConstants.DELETE_PRODUCT_BY_ID_SUCCESS });\r\n        dispatch(getProducts());\r\n      } else {\r\n        const { error } = res.data;\r\n        dispatch({\r\n          type: productConstants.DELETE_PRODUCT_BY_ID_FAILURE,\r\n          payload: {\r\n            error,\r\n          },\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\n","import React from 'react';\r\nimport { Navbar, Nav, Container } from \"react-bootstrap\";\r\nimport { NavLink, Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { signout } from \"../../actions\";\r\nimport './style.css';\r\n\r\nconst Header = () => {\r\n\r\n    const auth = useSelector(state => state.auth)\r\n    const dispatch = useDispatch();\r\n\r\n    const logout = () => {\r\n        dispatch(signout());\r\n    }\r\n\r\n    const renderLoggedInLinks = () => {\r\n        return (\r\n            <Nav>\r\n                <li>\r\n                    <span style={{ cursor: 'pointer' }} className=\"nav-link\" onClick={logout} >Signout</span>\r\n                </li>\r\n            </Nav>\r\n        )\r\n    }\r\n\r\n    const renderNonLoggedInLinks = () => {\r\n        return (\r\n            <Nav>\r\n                <li className=\"nav-item\">\r\n                    <NavLink to=\"signin\" className=\"nav-link\">Signin</NavLink>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <NavLink to=\"signup\" className=\"nav-link\">Signup</NavLink>\r\n                </li>\r\n            </Nav>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Navbar\r\n                collapseOnSelect\r\n                fixed=\"top\"\r\n                expand=\"lg\"\r\n                variant=\"light\"\r\n                style={{\r\n                    zIndex: 1,\r\n                    background: ' #fff ',\r\n                    boxShadow: '0px 0px 4px 0px',\r\n                }}\r\n            >\r\n                <Container fluid>\r\n                    <Link to=\"/\" className=\"navbar-brand\">Admin</Link>\r\n                    <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                        <Nav className=\"mr-auto\">\r\n\r\n                        </Nav>\r\n                        {auth.authenticate ? renderLoggedInLinks() : renderNonLoggedInLinks()}\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport Header from \"../Header\";\r\nimport './style.css'\r\nimport { Jumbotron, Row, Col, Container } from \"react-bootstrap\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst Layout = (props) => {\r\n    return (\r\n        <div>\r\n            <Header />\r\n            {\r\n                props.sidebar ?\r\n                    <Container fluid>\r\n                        <Row>\r\n                            <Col md={2} className=\"sidebar\">\r\n                                <ul>\r\n                                    <li><NavLink exact to={'/'} >Home</NavLink></li>\r\n                                    <li><NavLink to={'/page'} >Page</NavLink></li>\r\n                                    <li><NavLink to={'/category'} >Category</NavLink></li>\r\n                                    <li><NavLink to={'/products'} >Product</NavLink></li>\r\n                                    <li><NavLink to={'/orders'} >Order</NavLink></li>\r\n                                </ul>\r\n                            </Col>\r\n                            <Col md={10} style={{ marginLeft: 'auto', paddingTop: '60px' }}>\r\n                                {props.children}\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                    :\r\n                    props.children\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Layout;","import React from 'react'\r\nimport Layout from \"../../components/Layout\";\r\nimport { Jumbotron, Row, Col, Container } from \"react-bootstrap\";\r\nimport \"./style.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst Home = (props) => {\r\n    return (\r\n        <Layout sidebar>\r\n            \r\n\r\n\r\n            <Jumbotron style={{ margin: '5rem', background: '#fff' }} className=\"text-center\">\r\n                <h1>Welcome to Dashboard</h1>\r\n                <p>Ecommerce, also known as electronic commerce or internet commerce, refers to the buying and selling of goods or services using the internet, and the transfer of money and data to execute these transactions. Ecommerce is often used to refer to the sale of physical products online, but it can also describe any kind of commercial transaction that is facilitated through the internet. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search. </p>\r\n            </Jumbotron>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default Home;","import React from 'react'\r\nimport { Form } from \"react-bootstrap\";\r\n\r\nconst Input = (props) => {\r\n\r\n    let input = null;\r\n    switch(props.type){\r\n      case 'select':\r\n        input = <Form.Group>\r\n                  {props.label && <Form.Label>{props.label}</Form.Label>}\r\n                  <select\r\n                    className=\"form-control form-control-sm\"\r\n                    value={props.value}\r\n                    onChange={props.onChange}\r\n                  >\r\n                    <option value=\"\">{props.placeholder}</option>\r\n                    {\r\n                      props.options.length > 0 ?\r\n                      props.options.map((option, index) =>\r\n                        <option key={index} value={option.value}>{option.name}</option>\r\n                      ) : null\r\n                    }\r\n                  </select>\r\n              </Form.Group>\r\n        break;\r\n      case 'text':\r\n      default:\r\n        input = <Form.Group>\r\n                  {props.label && <Form.Label>{props.label}</Form.Label>}\r\n                  <Form.Control \r\n                      type={props.type} \r\n                      placeholder={props.placeholder} \r\n                      value={props.value}\r\n                      onChange={props.onChange}\r\n                      {...props}\r\n                  />\r\n                  <Form.Text className=\"text-muted\">\r\n                    {props.errorMessage}\r\n                  </Form.Text>\r\n              </Form.Group>\r\n    }\r\n  \r\n  \r\n    return input;\r\n}\r\n\r\nexport default Input;","import React, { useState, useEffect } from 'react';\r\nimport { Container, Form, Row, Col, Button } from \"react-bootstrap\";\r\nimport Layout from \"../../components/Layout\";\r\nimport Input from \"../../components/UI/Input\";\r\nimport { login, isUserLoggedIn } from \"../../actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst Signin = (props) => {\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [error, setError] = useState('');\r\n    const auth = useSelector(state => state.auth);\r\n    \r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if(!auth.authenticate){\r\n            dispatch(isUserLoggedIn());\r\n        }\r\n    }, [])\r\n\r\n    const userLogin = (e) => {\r\n        e.preventDefault()\r\n        const user = { email, password }\r\n        dispatch(login(user))\r\n    }\r\n\r\n    if(auth.authenticate){\r\n        return <Redirect to={'/'} />\r\n    }\r\n\r\n    return (\r\n        <Layout>\r\n            <Container>\r\n                <Row style={{ marginTop: '60px' }}>\r\n                    <Col md={{ span: 6, offset: 3 }}>\r\n                        <Form onSubmit={userLogin}>\r\n                            <Input\r\n                                label=\"Email Address\"\r\n                                placeholder=\"Email Address\"\r\n                                value={email}\r\n                                type=\"email\"\r\n                                onChange={(e) => setEmail(e.target.value)}\r\n                            />\r\n                            <Input\r\n                                label=\"Password\"\r\n                                placeholder=\"Password\"\r\n                                value={password}\r\n                                type=\"password\"\r\n                                onChange={(e) => setPassword(e.target.value)}\r\n                            />\r\n                            <Button variant=\"primary\" type=\"submit\">\r\n                                Submit\r\n                            </Button>\r\n                        </Form>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default Signin;","import React, { useState } from 'react';\r\nimport { Container, Form, Row, Col, Button } from \"react-bootstrap\";\r\nimport Layout from \"../../components/Layout\";\r\nimport Input from \"../../components/UI/Input\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport { signup } from \"../../actions\";\r\n\r\nconst Signup = (props) => {\r\n\r\n    const [firstName, setFirstName] = useState('');\r\n    const [lastName, setLastName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [error, setError] = useState('');\r\n    const auth = useSelector(state => state.auth);\r\n    const user = useSelector(state => state.user);\r\n    const dispatch = useDispatch();\r\n\r\n    if (auth.authenticate) {\r\n        return <Redirect to={'/'} />\r\n    }\r\n\r\n    if(user.loading){\r\n        return <p>Loading...!</p>\r\n    }\r\n\r\n    const userSignup = (e) => {\r\n        e.preventDefault()\r\n        const user = { firstName, lastName, email, password }\r\n        dispatch(signup(user))\r\n    }\r\n\r\n    return (\r\n        <Layout>\r\n            <Container>\r\n                { user.message }\r\n                <Row style={{ marginTop: '60px' }}>\r\n                    <Col md={{ span: 6, offset: 3 }}>\r\n                        <Form onSubmit={userSignup}>\r\n                            <Row>\r\n                                <Col md={6}>\r\n                                    <Input\r\n                                        label=\"First Name\"\r\n                                        placeholder=\"First Name\"\r\n                                        value={firstName}\r\n                                        type=\"text\"\r\n                                        onChange={(e) => setFirstName(e.target.value)}\r\n                                    />\r\n                                </Col>\r\n                                <Col md={6}>\r\n                                    <Input\r\n                                        label=\"Last Name\"\r\n                                        placeholder=\"Last Name\"\r\n                                        value={lastName}\r\n                                        type=\"text\"\r\n                                        onChange={(e) => setLastName(e.target.value)}\r\n                                    />\r\n                                </Col>\r\n\r\n                            </Row>\r\n\r\n                            <Input\r\n                                label=\"Email Address\"\r\n                                placeholder=\"Email Address\"\r\n                                value={email}\r\n                                type=\"email\"\r\n                                onChange={(e) => setEmail(e.target.value)}\r\n                            />\r\n                            <Input\r\n                                label=\"Password\"\r\n                                placeholder=\"Password\"\r\n                                value={password}\r\n                                type=\"password\"\r\n                                onChange={(e) => setPassword(e.target.value)}\r\n                            />\r\n\r\n                            <Button variant=\"primary\" type=\"submit\">\r\n                                Submit\r\n                            </Button>\r\n                        </Form>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default Signup;","import { authConstants, userConstants } from \"./constants\";\r\nimport axios from \"../helpers/axios\";\r\n\r\nexport const signup = (user) => {\r\n    console.log(user)\r\n    return async (dispatch) => {\r\n\r\n        dispatch({ type: userConstants.USER_REGISTER_REQUEST })\r\n        const res = await axios.post(`/admin/signup`, {\r\n            ...user\r\n        })\r\n\r\n        if(res.status === 201){\r\n            const { message } = res.data;\r\n            dispatch({\r\n                type: userConstants.USER_REGISTER_SUCCESS,\r\n                payload: { message }\r\n            })\r\n        }else{\r\n            if(res.status === 400){\r\n                dispatch({\r\n                    type: userConstants.USER_REGISTER_FAILURE,\r\n                    payload: { error: res.data.error }\r\n                })\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest}) => {\r\n    return <Route {...rest} component={(props) => {\r\n        const token = window.localStorage.getItem('token');\r\n        if(token){\r\n            return <Component {...props} />\r\n        }else{\r\n            return <Redirect to={`/signin`} />\r\n        }\r\n    }} />\r\n}\r\n\r\nexport default PrivateRoute;","import React from \"react\";\nimport \"./style.css\";\n\n/**\n * @author\n * @function Card\n **/\n\nconst Card = (props) => {\n  return (\n    <div className=\"card\" {...props}>\n      {(props.headerLeft || props.headerRight) && (\n        <div className=\"cardHeader\">\n          {props.headerLeft && <div>{props.headerLeft}</div>}\n          {props.headerRight && props.headerRight}\n        </div>\n      )}\n\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { updateOrder } from \"../../actions\";\nimport Layout from \"../../components/Layout\";\nimport Card from \"../../components/UI/Card\";\n\n\nimport \"./style.css\";\n\n/**\n * @author\n * @function Orders\n **/\n\nconst Orders = (props) => {\n  const order = useSelector((state) => state.order);\n  const [type, setType] = useState(\"\");\n  const dispatch = useDispatch();\n\n  const onOrderUpdate = (orderId) => {\n    const payload = {\n      orderId,\n      type,\n    };\n    dispatch(updateOrder(payload));\n  };\n\n  const formatDate = (date) => {\n    if (date) {\n      const d = new Date(date);\n      return `${d.getFullYear()}-${d.getMonth() + 1}-${d.getDate()}`;\n    }\n    return \"\";\n  };\n\n  return (\n    <Layout sidebar>\n      {order.orders.map((orderItem, index) => (\n        <Card\n          style={{\n            margin: \"10px 0\",\n          }}\n          key={index}\n          headerLeft={orderItem._id}\n        >\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              padding: \"50px 50px\",\n              alignItems: \"center\",\n            }}\n          >\n            <div>\n              <div className=\"title\">Items</div>\n              {orderItem.items.map((item, index) => (\n                <div className=\"value\" key={index}>\n                  {item.productId.name}\n                </div>\n              ))}\n            </div>\n            <div>\n              <span className=\"title\">Total Price</span>\n              <br />\n              <span className=\"value\">{orderItem.totalAmount}</span>\n            </div>\n            <div>\n              <span className=\"title\">Payment Type</span> <br />\n              <span className=\"value\">{orderItem.paymentType}</span>\n            </div>\n            <div>\n              <span className=\"title\">Payment Status</span> <br />\n              <span className=\"value\">{orderItem.paymentStatus}</span>\n            </div>\n          </div>\n          <div\n            style={{\n              boxSizing: \"border-box\",\n              padding: \"100px\",\n              display: \"flex\",\n              alignItems: \"center\",\n            }}\n          >\n            <div className=\"orderTrack\">\n              {orderItem.orderStatus.map((status) => (\n                <div\n                  className={`orderStatus ${\n                    status.isCompleted ? \"active\" : \"\"\n                  }`}\n                >\n                  <div\n                    className={`point ${status.isCompleted ? \"active\" : \"\"}`}\n                  ></div>\n                  <div className=\"orderInfo\">\n                    <div className=\"status\">{status.type}</div>\n                    <div className=\"date\">{formatDate(status.date)}</div>\n                  </div>\n                </div>\n              ))}\n            </div>\n\n            {/* select input to apply order action */}\n            <div\n              style={{\n                padding: \"0 50px\",\n                boxSizing: \"border-box\",\n              }}\n            >\n              <select onChange={(e) => setType(e.target.value)}>\n                <option value={\"\"}>select status</option>\n                {orderItem.orderStatus.map((status) => {\n                  return (\n                    <>\n                      {!status.isCompleted ? (\n                        <option key={status.type} value={status.type}>\n                          {status.type}\n                        </option>\n                      ) : null}\n                    </>\n                  );\n                })}\n              </select>\n            </div>\n            {/* button to confirm action */}\n\n            <div\n              style={{\n                padding: \"0 50px\",\n                boxSizing: \"border-box\",\n              }}\n            >\n              <button onClick={() => onOrderUpdate(orderItem._id)}>\n                confirm\n              </button>\n            </div>\n          </div>\n        </Card>\n      ))}\n    </Layout>\n  );\n};\n\nexport default Orders;\n","import axios from \"../helpers/axios\";\r\nimport { orderConstants } from \"./constants\";\r\n\r\nexport const getCustomerOrders = () => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: orderConstants.GET_CUSTOMER_ORDER_REQUEST });\r\n    try {\r\n      const res = await axios.post(\"/order/getCustomerOrders\");\r\n      if (res.status === 200) {\r\n        const { orders } = res.data;\r\n        dispatch({\r\n          type: orderConstants.GET_CUSTOMER_ORDER_SUCCESS,\r\n          payload: { orders },\r\n        });\r\n      } else {\r\n        const { error } = res.data;\r\n        dispatch({\r\n          type: orderConstants.GET_CUSTOMER_ORDER_FAILURE,\r\n          payload: { error },\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const updateOrder = (payload) => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: orderConstants.UPDATE_CUSTOMER_ORDER_REQUEST });\r\n    try {\r\n      const res = await axios.post(\"/order/update\", payload);\r\n      if (res.status === 201) {\r\n        dispatch({ type: orderConstants.UPDATE_CUSTOMER_ORDER_SUCCESS });\r\n        dispatch(getCustomerOrders());\r\n      } else {\r\n        const { error } = res.data;\r\n        dispatch({\r\n          type: orderConstants.UPDATE_CUSTOMER_ORDER_FAILURE,\r\n          payload: { error },\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\n","import React from 'react';\r\nimport { Container, Row, Col, Modal, Button } from 'react-bootstrap';\r\n\r\nconst NewModal = (props) => {\r\n    return (\r\n        <Modal size={props.size} show={props.show} onHide={props.handleClose} animation={false}>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>{props.modalTitle}</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                {props.children}\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                {\r\n                    props.buttons ? props.buttons.map((btn, index) =>\r\n                        <Button\r\n                            key={index}\r\n                            {...props}\r\n                            className=\"btn-sm\"\r\n                            variant={btn.color}\r\n                            onClick={btn.onClick}\r\n                        >\r\n                            {btn.label}\r\n                        </Button>\r\n                    ) :\r\n                        <Button\r\n                            variant=\"primary\"\r\n                            {...props}\r\n                            className=\"btn-sm\"\r\n                            onClick={props.onSubmit}\r\n                        >\r\n                            Save\r\n                </Button>\r\n                }\r\n\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default NewModal;\r\n","import React, { useState } from 'react';\r\nimport Layout from \"../../components/Layout\";\r\nimport { Row, Col, Container, Button, Table } from \"react-bootstrap\";\r\nimport Input from \"../../components/UI/Input\";\r\nimport Modal from \"../../components/UI/Modal\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addProduct, deleteProductById } from '../../actions';\r\nimport { generatePublicUrl } from '../../urlConfig';\r\nimport \"./style.css\";\r\n\r\nconst Products = (props) => {\r\n\r\n    const [name, setName] = useState('');\r\n    const [quantity, setQuantity] = useState('');\r\n    const [price, setPrice] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [categoryId, setCategoryId] = useState('');\r\n    const [productPictures, setProductPictures] = useState([]);\r\n    const [show, setShow] = useState(false);\r\n    const category = useSelector(state => state.category)\r\n    const dispatch = useDispatch();\r\n    const product = useSelector(state => state.product)\r\n    const [productDetailModal, setProductDetailModal] = useState(false)\r\n    const [productDetails, setProductDetails] = useState(null)\r\n\r\n    const handleClose = () => {\r\n        setShow(false)\r\n    };\r\n    const handleShow = () => setShow(true);\r\n\r\n\r\n\r\n    const submitProductForm = () => {\r\n        const form = new FormData();\r\n        form.append('name', name);\r\n        form.append('quantity', quantity);\r\n        form.append('price', price);\r\n        form.append('description', description);\r\n        form.append('category', categoryId);\r\n\r\n        for (let pic of productPictures) {\r\n            form.append('productPicture', pic);\r\n        }\r\n        dispatch(addProduct(form)).then(() => setShow(false));\r\n    };\r\n\r\n\r\n\r\n\r\n    const createCategoryList = (categories, options = []) => {\r\n        for (let category of categories) {\r\n            options.push({ value: category._id, name: category.name });\r\n            if (category.children, options) {\r\n                createCategoryList(category.children, options)\r\n            }\r\n        }\r\n        return options\r\n    }\r\n\r\n    const handleProductPictures = (e) => {\r\n        setProductPictures([\r\n            ...productPictures,\r\n            e.target.files[0]\r\n        ]);\r\n    }\r\n\r\n    const renderProducts = () => {\r\n        return (\r\n            <Table style={{ fonstSize: 10 }} responsive=\"sm\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Sr.</th>\r\n                        <th>Name</th>\r\n                        <th>Price</th>\r\n                        <th>Quantity</th>\r\n                        <th>Category</th>\r\n                        <th>Actions</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        product.products.length > 0 ?\r\n                            product.products.map((product, i = 0) =>\r\n                                <tr key={product._id}>\r\n                                    <td>{i + 1}</td>\r\n                                    <td>{product.name}</td>\r\n                                    <td>{product.price}</td>\r\n                                    <td>{product.quantity}</td>\r\n                                    <td>{product.category.name}</td>\r\n                                    <td>\r\n                                        <button onClick={() => showProductDetailModal(product)}>\r\n                                            info\r\n                    </button>\r\n                                        {/* <button\r\n                                            onClick={() => {\r\n                                                const payload = {\r\n                                                    productId: product._id,\r\n                                                };\r\n                                                dispatch(deleteProductById(payload))\r\n                                                window.location.reload()\r\n                                            }}\r\n                                        >\r\n                                            del\r\n                    </button> */}\r\n                                    </td>\r\n                                </tr>\r\n                            ) : null\r\n                    }\r\n                </tbody>\r\n            </Table>\r\n        );\r\n    }\r\n\r\n\r\n    const renderAddProductModal = () => {\r\n        return (\r\n            <Modal\r\n                show={show}\r\n                handleClose={handleClose}\r\n                modalTitle={'Add New Product'}\r\n                onSubmit={submitProductForm}\r\n            >\r\n                <Input\r\n                    label=\"Name\"\r\n                    value={name}\r\n                    placeholder={'Product Name'}\r\n                    onChange={(e) => setName(e.target.value)}\r\n                />\r\n                <Input\r\n                    label=\"Quantity\"\r\n                    value={quantity}\r\n                    placeholder={'Quantity'}\r\n                    onChange={(e) => setQuantity(e.target.value)}\r\n                />\r\n                <Input\r\n                    label=\"Price\"\r\n                    value={price}\r\n                    placeholder={'Price'}\r\n                    onChange={(e) => setPrice(e.target.value)}\r\n                />\r\n                <Input\r\n                    label=\"Description\"\r\n                    value={description}\r\n                    placeholder={'Description'}\r\n                    onChange={(e) => setDescription(e.target.value)}\r\n                />\r\n                <select\r\n                    value={categoryId}\r\n                    className=\"form-control\"\r\n                    onChange={(e) => setCategoryId(e.target.value)}\r\n                >\r\n                    <option>Select Category</option>\r\n                    {\r\n                        createCategoryList(category.categories).map(option =>\r\n                            <option\r\n                                key={option.value}\r\n                                value={option.value}\r\n                            >{option.name}</option>\r\n                        )\r\n                    }\r\n                </select>\r\n                {\r\n                    productPictures.length > 0 ?\r\n                        productPictures.map((pic, index) => {\r\n                            if (pic==undefined) {\r\n                                return null\r\n                            } else {\r\n                                return <div key={index}>{pic.name}</div>\r\n                            }\r\n                            // console.log(pic==undefined)\r\n                        }) : null\r\n                }\r\n                <input type=\"file\" name=\"productPicture\" onChange={handleProductPictures} />\r\n            </Modal>\r\n        )\r\n    }\r\n\r\n    const handleCloseProductDetailModal = () => {\r\n        setProductDetailModal(false)\r\n    }\r\n\r\n    const showProductDetailModal = (product) => {\r\n        setProductDetails(product)\r\n        setProductDetailModal(true)\r\n    }\r\n\r\n    const renderProductDetailModal = () => {\r\n        if (!productDetails) {\r\n            return null\r\n        }\r\n        return (\r\n            <Modal\r\n                show={productDetailModal}\r\n                handleClose={handleCloseProductDetailModal}\r\n                modalTitle={'Product Details'}\r\n                size='lg'\r\n            >\r\n                <Row>\r\n                    <Col md=\"12\">\r\n                        <label className=\"key\" >Name</label>\r\n                        <p className=\"value\" >{productDetails.name}</p>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col md=\"4\">\r\n                        <label className=\"key\" >Price</label>\r\n                        <p className=\"value\" >{productDetails.price}</p>\r\n                    </Col>\r\n                    <Col md=\"4\">\r\n                        <label className=\"key\" >Quantity</label>\r\n                        <p className=\"value\" >{productDetails.quantity}</p>\r\n                    </Col>\r\n                    <Col md=\"4\">\r\n                        <label className=\"key\" >Category</label>\r\n                        <p className=\"value\" >{productDetails.category.name}</p>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col md=\"12\">\r\n                        <label className=\"key\" >Description</label>\r\n                        <p className=\"value\" >{productDetails.description}</p>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col md=\"12\">\r\n                        <label className=\"key\" >Product Pictures</label>\r\n                        <div style={{ display: 'flex' }}>\r\n                            {productDetails.productPictures.map(picture =>\r\n                                <div className=\"productImgContainer\">\r\n                                    <img src={generatePublicUrl(picture.img)} />\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </Modal>\r\n        )\r\n    }\r\n\r\n\r\n    return (\r\n        <Layout sidebar>\r\n            <Container>\r\n                <Row>\r\n                    <Col md={12}>\r\n                        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                            <h4>Products</h4>\r\n                            <button onClick={handleShow}>Add</button>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        {renderProducts()}\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n            {renderAddProductModal()}\r\n            {renderProductDetailModal()}\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default Products;","import React from \"react\";\r\nimport Input from '../../../components/UI/Input';\r\nimport Modal from \"../../../components/UI/Modal\";\r\nimport { Container, Row, Col, Button } from 'react-bootstrap';\r\n\r\nconst UpdateCategoriesModal = (props) => {\r\n\r\n    const {\r\n        show,\r\n        handleClose,\r\n        modalTitle,\r\n        size,\r\n        expandedArray,\r\n        checkedArray,\r\n        handleCategoryInput,\r\n        categoryList,\r\n        onSubmit,\r\n    } = props;\r\n\r\n    return (\r\n        <Modal\r\n            show={show}\r\n            handleClose={handleClose}\r\n            onSubmit={onSubmit}\r\n            modalTitle={modalTitle}\r\n            size={size}\r\n        >\r\n            <Row>\r\n                <Col>\r\n                    <h6>Expanded</h6>\r\n                </Col>\r\n            </Row>\r\n            {\r\n                expandedArray.length > 0 &&\r\n                expandedArray.map((item, index) =>\r\n                    <Row>\r\n                        <Col>\r\n                            <Input\r\n                                value={item.name}\r\n                                placeholder={'Category Name'}\r\n                                onChange={(e) => handleCategoryInput('name', e.target.value, index, 'expanded')}\r\n                                className=\"form-control form-control-sm\"\r\n                            />\r\n                        </Col>\r\n                        <Col>\r\n                            <select\r\n                                className=\"form-control form-control-sm\"\r\n                                value={item.parentId}\r\n                                onChange={(e) => handleCategoryInput('parentId', e.target.value, index, 'expanded')}\r\n                            >\r\n                                <option>Select Category</option>\r\n                                {\r\n                                    categoryList.map(option =>\r\n                                        <option key={option.value} value={option.value}>{option.name}</option>\r\n                                    )\r\n                                }\r\n                            </select>\r\n                        </Col>\r\n                        <Col>\r\n                            <select\r\n                                className=\"form-control form-control-sm\"\r\n                                value={item.type}\r\n                                onChange={(e) => handleCategoryInput('type', e.target.value, index, 'expanded')}\r\n                            >\r\n                                <option value=\"\">Select Type</option>\r\n                                <option value=\"store\">Store</option>\r\n                                <option value=\"product\">Product</option>\r\n                                <option value=\"page\">Page</option>\r\n                            </select>\r\n                        </Col>\r\n                    </Row>\r\n                )\r\n            }\r\n            <h6>Checked Category</h6>\r\n            {\r\n                checkedArray.length > 0 &&\r\n                checkedArray.map((item, index) =>\r\n                    <Row>\r\n                        <Col>\r\n                            <Input\r\n                                value={item.name}\r\n                                placeholder={'Category Name'}\r\n                                onChange={(e) => handleCategoryInput('name', e.target.value, index, 'checked')}\r\n                                className=\"form-control form-control-sm\"\r\n                            />\r\n                        </Col>\r\n                        <Col>\r\n                            <select\r\n                                className=\"form-control form-control-sm\"\r\n                                value={item.parentId}\r\n                                onChange={(e) => handleCategoryInput('parentId', e.target.value, index, 'checked')}\r\n                            >\r\n                                <option>Select Category</option>\r\n                                {\r\n                                    categoryList.map(option =>\r\n                                        <option key={option.value} value={option.value}>{option.name}</option>\r\n                                    )\r\n                                }\r\n                            </select>\r\n                        </Col>\r\n                        <Col>\r\n                            <select\r\n                                className=\"form-control form-control-sm\"\r\n                                value={item.type}\r\n                                onChange={(e) => handleCategoryInput('type', e.target.value, index, 'checked')}\r\n                            >\r\n                                <option value=\"\">Select Type</option>\r\n                                <option value=\"store\">Store</option>\r\n                                <option value=\"product\">Product</option>\r\n                                <option value=\"page\">Page</option>\r\n                            </select>\r\n                        </Col>\r\n                    </Row>\r\n                )\r\n            }\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default UpdateCategoriesModal;","import React from \"react\";\r\nimport Input from '../../../components/UI/Input';\r\nimport Modal from \"../../../components/UI/Modal\";\r\nimport { Container, Row, Col, Button } from 'react-bootstrap';\r\n\r\nconst AddCategoModal = (props) => {\r\n\r\n    const {\r\n        show,\r\n        handleClose,\r\n        modalTitle,\r\n        categoryName,\r\n        setCategoryName,\r\n        parentCategoryId,\r\n        setParentCategoryId,\r\n        categoryList,\r\n        handleCategoryImage,\r\n        onSubmit,\r\n    } = props;\r\n\r\n    return (\r\n        <Modal\r\n            show={show}\r\n            handleClose={handleClose}\r\n            onSubmit={onSubmit}\r\n            modalTitle={modalTitle}\r\n        >\r\n            <Row>\r\n                <Col >\r\n                    <Input\r\n                        value={categoryName}\r\n                        placeholder={'Category Name'}\r\n                        onChange={(e) => setCategoryName(e.target.value)}\r\n                        className=\"form-control form-control-sm\"\r\n                    />\r\n                </Col>\r\n                <Col >\r\n                    <select\r\n                        className=\"form-control form-control-sm\"\r\n                        value={parentCategoryId}\r\n                        onChange={(e) => setParentCategoryId(e.target.value)}\r\n                    >\r\n                        <option>Select Category</option>\r\n                        {\r\n                            categoryList.map(option =>\r\n                                <option key={option.value} value={option.value}>{option.name}</option>\r\n                            )\r\n                        }\r\n                    </select>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    <input type=\"file\" name=\"categoryImage\" onChange={handleCategoryImage} />\r\n                </Col>\r\n            </Row>\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default AddCategoModal;","import React, { useEffect, useState } from 'react'\r\nimport Layout from \"../../components/Layout\"\r\nimport { Row, Col, Container, Button } from \"react-bootstrap\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport {\r\n    getAllCategory,\r\n    addCategory,\r\n    updateCategories,\r\n    deleteCategories as deleteCategoriesAction\r\n} from '../../actions';\r\nimport Input from \"../../components/UI/Input\"\r\nimport Modal from \"../../components/UI/Modal\"\r\nimport CheckboxTree from \"react-checkbox-tree\"\r\nimport {\r\n    IoIosCheckboxOutline,\r\n    IoIosCheckbox,\r\n    IoIosArrowForward,\r\n    IoIosArrowDown,\r\n    IoIosAdd,\r\n    IoIosTrash,\r\n    IoIosCloudUpload\r\n} from \"react-icons/io\"\r\nimport 'react-checkbox-tree/lib/react-checkbox-tree.css'\r\nimport UpdateCategoriesModal from './components/UpdateCategoriesModal'\r\nimport AddCategoModal from './components/AddCategoryModal'\r\nimport './style.css'\r\n\r\nconst Category = (props) => {\r\n\r\n    const [categoryName, setCategoryName] = useState('')\r\n    const [parentCategoryId, setParentCategoryId] = useState('')\r\n    const [categoryImage, setCategoryImage] = useState([])\r\n    const [show, setShow] = useState(false)\r\n    const [checked, setChecked] = useState([])\r\n    const [expanded, setExpanded] = useState([])\r\n    const [checkedArray, setCheckedArray] = useState([])\r\n    const [expandedArray, setExpandedArray] = useState([])\r\n    const [updateCategoryModal, setUpdateCategoryModal] = useState(false)\r\n    const [deleteCategoryModal, setDeleteCategoryModal] = useState(false)\r\n    const category = useSelector(state => state.category)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        if (!category.loading) {\r\n            setShow(false);\r\n        }\r\n    }, [category.loading])\r\n\r\n\r\n    const renderCategories = (categories) => {\r\n        let myCategories = [];\r\n        for (let category of categories) {\r\n            myCategories.push(\r\n                {\r\n                    value: category._id,\r\n                    label: category.name,\r\n                    children: category.children.length > 0 && renderCategories(category.children)\r\n                }\r\n            );\r\n        }\r\n        return myCategories\r\n    }\r\n\r\n    const handleClose = () => {\r\n        const form = new FormData()\r\n        \r\n        if (categoryName === \"\") {\r\n            alert('Category name is required');\r\n            setShow(false);\r\n            return;\r\n        }\r\n\r\n        form.append('name', categoryName)\r\n        form.append('parentId', parentCategoryId)\r\n        form.append('categoryImage', categoryImage)\r\n        dispatch(addCategory(form))\r\n        setCategoryName('')\r\n        setParentCategoryId('')\r\n        setShow(false)\r\n    };\r\n    const handleShow = () => setShow(true);\r\n\r\n\r\n    const createCategoryList = (categories, options = []) => {\r\n        for (let category of categories) {\r\n            options.push({ \r\n                value: category._id, \r\n                name: category.name, \r\n                parentId: category.parentId, \r\n                type: category.type\r\n            })\r\n            if (category.children.length > 0) {\r\n                createCategoryList(category.children, options)\r\n            }\r\n        }\r\n        return options\r\n    }\r\n\r\n    const handleCategoryImage = (e) => {\r\n        setCategoryImage(e.target.files[0])\r\n    }\r\n\r\n    \r\n    const updateCategory = () => {\r\n        updateCheckedAndExpandedCategories();\r\n        setUpdateCategoryModal(true);\r\n    }\r\n\r\n    const updateCheckedAndExpandedCategories = () => {\r\n        const categories = createCategoryList(category.categories);\r\n        const checkedArray = [];\r\n        const expandedArray = [];\r\n        checked.length > 0 && checked.forEach((categoryId, index) => {\r\n            const category = categories.find((category, _index) => categoryId == category.value)\r\n            category && checkedArray.push(category);\r\n        })\r\n        expanded.length > 0 && expanded.forEach((categoryId, index) => {\r\n            const category = categories.find((category, _index) => categoryId == category.value)\r\n            category && expandedArray.push(category);\r\n        })\r\n        setCheckedArray(checkedArray);\r\n        setExpandedArray(expandedArray);\r\n    }\r\n\r\n\r\n    const handleCategoryInput = (key, value, index, type) => {\r\n        if (type == \"checked\") {\r\n            const updatedCheckedArray = checkedArray.map((item, _index) => \r\n            index == _index ? { ...item, [key]: value } : item);\r\n            setCheckedArray(updatedCheckedArray);\r\n        } else if (type == \"expanded\") {\r\n            const updatedExpandedArray = expandedArray.map((item, _index) => \r\n            index == _index ? { ...item, [key]: value } : item);\r\n            setExpandedArray(updatedExpandedArray);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    const updateCategoriesForm = () => {\r\n        const form = new FormData();\r\n        expandedArray.forEach((item, index) => {\r\n            form.append('_id', item.value);\r\n            form.append('name', item.name);\r\n            form.append('parentId', item.parentId ? item.parentId : '');\r\n            form.append('type', item.type);\r\n        });\r\n        checkedArray.forEach((item, index) => {\r\n            form.append('_id', item.value);\r\n            form.append('name', item.name);\r\n            form.append('parentId', item.parentId ? item.parentId : '');\r\n            form.append('type', item.type);\r\n        });\r\n        dispatch(updateCategories(form));      \r\n        setUpdateCategoryModal(false);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const deleteCategories = () => {\r\n        const checkedIdArray = checkedArray.map((item, index) => ({ _id: item.value }));\r\n        const expandedIdArray = expandedArray.map((item, index) => ({ _id: item.value }));\r\n        const idsArray = expandedIdArray.concat(checkedIdArray);\r\n\r\n        if (checkedIdArray.length > 0) {\r\n            dispatch(deleteCategoriesAction(checkedIdArray))\r\n                .then(result => {\r\n                    if (result) {\r\n                        dispatch(getAllCategory())\r\n                        setDeleteCategoryModal(false)\r\n                    }\r\n                });\r\n        }\r\n        setDeleteCategoryModal(false)\r\n    }\r\n\r\n\r\n    const renderDeleteCategoryModal = () => {\r\n        return (\r\n            <Modal\r\n                modalTitle=\"Confirm\"\r\n                show={deleteCategoryModal}\r\n                handleClose={() => setDeleteCategoryModal(false)}\r\n                buttons={[\r\n                    {\r\n                        label: 'No',\r\n                        color: 'primary',\r\n                        onClick: () => {\r\n                            setDeleteCategoryModal(false)\r\n                        }\r\n                    },\r\n                    {\r\n                        label: 'Yes',\r\n                        color: 'danger',\r\n                        onClick: deleteCategories\r\n                    }\r\n                ]}\r\n            >\r\n                <h5>Expanded</h5>\r\n                {expandedArray.map((item, index) => <span key={index}>{item.name}</span>)}\r\n                <h5>Checked</h5>\r\n                {checkedArray.map((item, index) => <span key={index}>{item.name}</span>)}\r\n\r\n            </Modal>\r\n        );\r\n    }\r\n\r\n    const deleteCategory = () => {\r\n        updateCheckedAndExpandedCategories();\r\n        setDeleteCategoryModal(true);\r\n    }\r\n\r\n\r\n    const categoryList = createCategoryList(category.categories);\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Layout sidebar>\r\n            <Container>\r\n                <Row>\r\n                    <Col md={12}>\r\n                        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                            <h4>Category</h4>\r\n                            <div className=\"actionBtnContainer\">\r\n                                <button onClick={handleShow}><IoIosAdd/><span>Add</span></button>\r\n                                <button onClick={deleteCategory}><IoIosTrash/><span>Delete</span></button>\r\n                                <button onClick={updateCategory}><IoIosCloudUpload/><span>Edit</span></button>\r\n                            </div>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col md={12}>\r\n                        <CheckboxTree\r\n                            nodes={renderCategories(category.categories)}\r\n                            checked={checked}\r\n                            expanded={expanded}\r\n                            onCheck={checked => setChecked(checked)}\r\n                            onExpand={expanded => setExpanded(expanded)}\r\n                            icons={{\r\n                                check: <IoIosCheckbox />,\r\n                                uncheck: <IoIosCheckboxOutline />,\r\n                                halfCheck: <IoIosCheckboxOutline />,\r\n                                expandClose: <IoIosArrowForward />,\r\n                                expandOpen: <IoIosArrowDown />,\r\n                            }}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n\r\n\r\n            {renderDeleteCategoryModal()}\r\n\r\n            <AddCategoModal\r\n                show={show}\r\n                handleClose={() => setShow(false)}\r\n                onSubmit={handleClose}\r\n                modalTitle={'Add New Category'}\r\n                categoryName={categoryName}\r\n                setCategoryName={setCategoryName}\r\n                parentCategoryId={parentCategoryId}\r\n                setParentCategoryId={setParentCategoryId}\r\n                handleCategoryImage={handleCategoryImage}\r\n                categoryList={categoryList}\r\n            />\r\n\r\n            <UpdateCategoriesModal\r\n                show={updateCategoryModal}\r\n                handleClose={() => setUpdateCategoryModal(false)}\r\n                onSubmit={updateCategoriesForm}\r\n                modalTitle={'Update Category'}\r\n                size=\"lg\"\r\n                expandedArray={expandedArray}\r\n                checkedArray={checkedArray}\r\n                handleCategoryInput={handleCategoryInput}\r\n                categoryList={categoryList}\r\n            />\r\n\r\n\r\n\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default Category;","const linearCategories = (categories, options = []) => {\r\n    for (let category of categories) {\r\n        options.push({ \r\n            value: category._id, \r\n            name: category.name, \r\n            parentId: category.parentId, \r\n            type: category.type\r\n        });\r\n        if (category.children.length > 0) {\r\n            linearCategories(category.children, options);\r\n        }\r\n    }\r\n    return options;\r\n}\r\n\r\nexport default linearCategories;","import React, { useState, useEffect } from 'react';\r\nimport Layout from '../../components/Layout';\r\nimport Modal from '../../components/UI/Modal';\r\nimport Input from '../../components/UI/Input';\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport linearCategories from \"../../helpers/linearCategories\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { createPage } from '../../actions'\r\n\r\nconst NewPage = () => {\r\n\r\n    const [createModal, setCreateModal] = useState(false);\r\n    const [title, setTitle] = useState('');\r\n    const [desc, setDesc] = useState('');\r\n    const [banners, setBanners] = useState([]);\r\n    const [products, setProducts] = useState([]);\r\n    const category = useSelector(state => state.category);\r\n    const [categories, setCategories] = useState([]);\r\n    const [categoryId, setCategoryId] = useState('');\r\n    const [type, setType] = useState('');\r\n    const dispatch = useDispatch();\r\n    const page = useSelector(state => state.page);\r\n\r\n\r\n    useEffect(() => {\r\n        setCategories(linearCategories(category.categories));\r\n    }, [category])\r\n\r\n\r\n    useEffect(() => {\r\n        console.log(page);\r\n        if (!page.loading) {\r\n            setCreateModal(false);\r\n            setTitle('');\r\n            setCategoryId('');\r\n            setDesc('');\r\n            setProducts([]);\r\n            setBanners([]);\r\n        }\r\n    }, [page]);\r\n\r\n\r\n    const onCategoryChange = (e) => {\r\n        const category = categories.find(category => category.value == e.target.value)\r\n        setCategoryId(e.target.value)\r\n        setType(category.type)\r\n    }\r\n\r\n    const handleBannerImages = (e) => {\r\n        console.log(e);\r\n        setBanners([...banners, e.target.files[0]]);\r\n    }\r\n\r\n    const handleProductImages = (e) => {\r\n        console.log(e);\r\n        setProducts([...products, e.target.files[0]]);\r\n    }\r\n\r\n    const sumbitPageForm = (e) => {\r\n        if (title === \"\") {\r\n            alert('Title is Required');\r\n            setCreateModal(false);\r\n            return;\r\n        }\r\n        const form = new FormData();\r\n        form.append('title', title);\r\n        form.append('description', desc);\r\n        form.append('category', categoryId);\r\n        form.append('type', type);\r\n        banners.forEach((banner, index) => {\r\n            form.append('banners', banner);\r\n        });\r\n        products.forEach((product, index) => {\r\n            form.append('products', product);\r\n        });\r\n        dispatch(createPage(form));\r\n    }\r\n\r\n\r\n    const renderCreatePageModal = () => {\r\n        return (\r\n            <Modal\r\n                show={createModal}\r\n                modalTitle={'Create New Page'}\r\n                handleClose={() => setCreateModal(false)}\r\n                onSubmit={sumbitPageForm}\r\n            >\r\n                <Container>\r\n                    <Row>\r\n                        <Col>\r\n                            {/* <select\r\n                                className=\"form-control \"\r\n                                value={categoryId}\r\n                                onChange={onCategoryChange}\r\n                            >\r\n                                <option value=\"\">Select Category</option>\r\n                                {\r\n                                    categories.map(cat =>\r\n                                        <option key={cat.value} value={cat.value}>{cat.name}</option>\r\n                                    )\r\n                                }\r\n                            </select> */}\r\n                            <Input \r\n                                type=\"select\"\r\n                                value={categoryId}\r\n                                onChange={onCategoryChange}\r\n                                options={categories}\r\n                                placeholder={'Select Category'}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            <Input\r\n                                value={title}\r\n                                onChange={(e) => setTitle(e.target.value)}\r\n                                placeholder={'Page Title'}\r\n                                className=\"\"\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            <Input\r\n                                value={desc}\r\n                                onChange={(e) => setDesc(e.target.value)}\r\n                                placeholder={'Page Desc'}\r\n                                className=\"\"\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    {\r\n                        banners.length > 0 ?\r\n                            banners.map((banner, index) =>\r\n                                <Row key={index}><Col>{banner.name}</Col></Row>\r\n                            ) : null\r\n                    }\r\n                    <Row>\r\n                        <Col>\r\n                            <input\r\n                                type='file'\r\n                                name=\"banners\"\r\n                                className=\"form-control \"\r\n                                onChange={handleBannerImages}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                    {\r\n                        products.length > 0 ?\r\n                            products.map((product, index) =>\r\n                                <Row key={index}><Col>{product.name}</Col></Row>\r\n                            ) : null\r\n                    }\r\n                    <Row>\r\n                        <Col>\r\n                            <input\r\n                                type='file'\r\n                                name=\"products\"\r\n                                className=\"form-control \"\r\n                                onChange={handleProductImages}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </Modal>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Layout sidebar>\r\n            {\r\n                page.loading ?\r\n                    <p>Creating Page...please wait</p>\r\n                    :\r\n                    <>\r\n                        {renderCreatePageModal()}\r\n                        <button onClick={() => setCreateModal(true)}>Create Page</button>\r\n                    </>\r\n            }\r\n        </Layout>\r\n    );\r\n}\r\n\r\nexport default NewPage;","import { pageConstants } from \"./constants\";\r\nimport axios from \"../helpers/axios\";\r\n\r\nexport const createPage = (form) => {\r\n    return async dispatch => {\r\n        dispatch({\r\n            type:pageConstants.CREATE_PAGE_REQUEST\r\n        });\r\n        try {\r\n            const res = await axios.post('/page/create',form);\r\n            if (res.status === 201) {\r\n                dispatch({ \r\n                    type: pageConstants.CREATE_PAGE_SUCCESS,\r\n                    payload: { page: res.data.page }\r\n                 });\r\n            } else {\r\n                dispatch({ \r\n                    type: pageConstants.CREATE_PAGE_FAILURE,\r\n                    payload: { page: res.data.page }\r\n                 });\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Home from \"./containers/Home\";\r\nimport Signin from \"./containers/Signin\";\r\nimport Signup from \"./containers/Signup\";\r\nimport './App.css';\r\nimport PrivateRoute from \"./components/HOC/PrivateRoute\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { isUserLoggedIn, getAllCategory, getInitialData } from \"./actions\";\r\nimport Orders from './containers/Orders';\r\nimport Products from './containers/Products';\r\nimport Category from './containers/Category';\r\nimport NewPage from './containers/NewPage';\r\n\r\nconst App = (props) => {\r\n\r\n  const dispatch = useDispatch();\r\n  const auth = useSelector(state => state.auth);\r\n\r\n  useEffect(() => {\r\n    if (!auth.authenticate) {\r\n      dispatch(isUserLoggedIn())\r\n    }\r\n    if (auth.authenticate) {\r\n      dispatch(getInitialData())\r\n    }\r\n  }, [auth.authenticate])\r\n\r\n  return (\r\n    <div>\r\n      <Switch>\r\n        <PrivateRoute path='/' exact component={Home} />\r\n        <PrivateRoute path='/page' component={NewPage} />\r\n        <PrivateRoute path='/category' component={Category} />\r\n        <PrivateRoute path='/products' component={Products} />\r\n        <PrivateRoute path='/orders' component={Orders} />\r\n\r\n        <Route path='/Signin' component={Signin} />\r\n        <Route path='/Signup' component={Signup} />\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import {\r\n    initialDataConstants,\r\n    categoryConstants,\r\n    productConstants,\r\n    orderConstants,\r\n} from \"./constants\";\r\nimport axios from \"../helpers/axios\";\r\n\r\nexport const getInitialData = () => {\r\n    return async dispatch => {\r\n\r\n        // dispatch({ type: initialDataConstants.GET_ALL_INITIAL_DATA_REQUEST });\r\n        const res = await axios.post(`/initialdata`);\r\n        if (res.status === 200) {\r\n            const { categories, products, orders } = res.data;\r\n            dispatch({\r\n                type: categoryConstants.GET_ALL_CATEGORIES_SUCCESS,\r\n                payload: { categories }\r\n            });\r\n            dispatch({\r\n                type: productConstants.GET_ALL_PRODUCT_SUCCESS,\r\n                payload: { products }\r\n            });\r\n            dispatch({\r\n                type: orderConstants.GET_CUSTOMER_ORDER_SUCCESS,\r\n                payload: { orders },\r\n            });\r\n        }\r\n        console.log(res);\r\n    }\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from \"react-redux\"\nimport store from \"./store\"\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nwindow.store = store\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}